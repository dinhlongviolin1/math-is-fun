/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kid.s.educational.game;

import java.util.Random;
import javax.swing.ImageIcon;

/**
 *
 * @author Huong Ly
 */
public class MathEquation extends javax.swing.JFrame {

    /**
     * Creates new form MathEquation
     */
    public MathEquation() {
        super("MATH IS FUN!!!!!");
        this.setIconImage(new ImageIcon("src/Database/Background/SmallIcon.png").getImage());
        initComponents();
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        Help.InputData();
        InputDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn1 = new javax.swing.JButton();
        lbl1 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        btn2 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        lbl3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1138, 659));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 290, 180, 180));
        getContentPane().add(lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 140, 140));
        getContentPane().add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 140, 140));
        getContentPane().add(lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 140));
        getContentPane().add(lbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 140, 140));

        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 290, 180, 180));

        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 50, 180, 180));

        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 180, 180));
        getContentPane().add(lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 140, 140));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Background/HomeBtn.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 80, 80));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Background/NextQuestion.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 400, 100));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Background/ChangeGame.jpg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 430, 400, 100));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Database/Background/BlackBackground.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private VoiceThread correct = new VoiceThread(0, "Correct.mp3", 1000);
    private VoiceThread wrong = new VoiceThread(0, "Wrong.mp3", 1000);


    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if (b1 == Ans) {
            CorrectAns(b1);

        } else {
            PicThread p1 = new PicThread(1000, "RedBackground.jpg", jLabel1);
            p1.start();
            if (Help.Sound) {
                wrong.run();
            }
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if (b3 == Ans) {
            CorrectAns(b3);

        } else {
            PicThread p1 = new PicThread(1000, "RedBackground.jpg", jLabel1);
            p1.start();
            if (Help.Sound) {
                wrong.run();
            }
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        new MathEquation().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        new GameChoosing().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if (b4 == Ans) {
            CorrectAns(b4);

        } else {
            PicThread p1 = new PicThread(1000, "RedBackground.jpg", jLabel1);
            p1.start();
            if (Help.Sound) {
                wrong.run();
            }
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if (b2 == Ans) {
            CorrectAns(b2);

        } else {
            PicThread p1 = new PicThread(1000, "RedBackground.jpg", jLabel1);
            p1.start();
            if (Help.Sound) {
                wrong.run();
            }
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MathEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MathEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MathEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MathEquation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathEquation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    // End of variables declaration//GEN-END:variables

    private Random rand = new Random();
    private Integer a = null;
    private Integer a1 = null;
    private Integer a2 = null;
    private Integer b1 = null;
    private Integer b2 = null;
    private Integer b3 = null;
    private Integer b4 = null;
    private String m = null;
    private Integer Ans = null;

    private void InputDisplay() {
        //random a1, a2, mark
        a = rand.nextInt(4);
        if (a == 0) {
            Sum1();
        }
        if (a == 1) {
            Sum2();
        }
        if (a == 2) {
            Sub1();
        }
        if (a == 3) {
            Sub2();
        }
    }

    private void Sum1() {
        m = "Plus";
        a1 = rand.nextInt(19) + 1;
        a2 = rand.nextInt(19) + 1;
        while (a2 + a1 > 10) {
            a2 = rand.nextInt(19) + 1;
            a1 = rand.nextInt(19) + 1;
        }
        Ans = a2 + a1;
        Integer p = rand.nextInt(4) + 1;
        System.out.println(p);
        if (p == 1) {
            b1 = Ans;
            b2 = NumberRandomCheck(b1, 0, 0, 0);
            b3 = NumberRandomCheck(b1, b2, 0, 0);
            b4 = NumberRandomCheck(b1, b3, b2, 0);
        }
        if (p == 2) {
            b2 = Ans;
            b3 = NumberRandomCheck(b2, 0, 0, 0);
            b4 = NumberRandomCheck(b2, b3, 0, 0);
            b1 = NumberRandomCheck(b2, b3, b4, 0);
        }
        if (p == 3) {
            b3 = Ans;
            b4 = NumberRandomCheck(b3, 0, 0, 0);
            b1 = NumberRandomCheck(b3, b4, 0, 0);
            b2 = NumberRandomCheck(b3, b4, b1, 0);
        }

        if (p == 4) {
            b4 = Ans;
            b1 = NumberRandomCheck(b4, 0, 0, 0);
            b2 = NumberRandomCheck(b4, b1, 0, 0);
            b3 = NumberRandomCheck(b4, b1, b2, 0);
        }
        lbl1.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a1 - 1).getNumbPicURL(), 140, 140));
        lbl2.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a2 - 1).getNumbPicURL(), 140, 140));
        lbl3.setIcon(Help.imgicn("src/Database/Pictures/QuestionMark.png", 140, 140));
        lbl4.setIcon(Help.imgicn("src/Database/Pictures/" + Help.Plus.getMakPicURL(), 140, 140));
        InpAns();
        if (Help.Sound) {
            VoiceThread t1 = new VoiceThread(500, a1 + ".mp3", 1000);
            VoiceThread t2 = new VoiceThread(1600, m + ".mp3", 1000);
            VoiceThread t3 = new VoiceThread(2700, a2 + ".mp3", 1000);
            VoiceThread t4 = new VoiceThread(3800, "Equal.mp3", 1000);
            VoiceThread t5 = new VoiceThread(4900, "what.mp3", 1000);
            t1.start();
            t2.start();
            t3.start();
            t4.start();
            t5.start();
        }
    }

    private void Sum2() {
        m = "Plus";
        a1 = rand.nextInt(19) + 1;
        a2 = rand.nextInt(19) + 1;
        Ans = a2 - a1;
        while (a2 - a1 <= 0) {
            a1 = rand.nextInt(19) + 1;
            a2 = rand.nextInt(19) + 1;
        }
        Ans = a2 - a1;
        Integer p = rand.nextInt(4) + 1;
        if (p == 1) {
            b1 = Ans;
            b2 = NumberRandomCheck(b1, 0, 0, 0);
            b3 = NumberRandomCheck(b1, b2, 0, 0);
            b4 = NumberRandomCheck(b1, b3, b2, 0);
        }
        if (p == 2) {
            b2 = Ans;
            b3 = NumberRandomCheck(b2, 0, 0, 0);
            b4 = NumberRandomCheck(b2, b3, 0, 0);
            b1 = NumberRandomCheck(b2, b3, b4, 0);
        }
        if (p == 3) {
            b3 = Ans;
            b4 = NumberRandomCheck(b3, 0, 0, 0);
            b1 = NumberRandomCheck(b3, b4, 0, 0);
            b2 = NumberRandomCheck(b3, b4, b1, 0);
        }

        if (p == 4) {
            b4 = Ans;
            b1 = NumberRandomCheck(b4, 0, 0, 0);
            b2 = NumberRandomCheck(b4, b1, 0, 0);
            b3 = NumberRandomCheck(b4, b1, b2, 0);
        }
        lbl1.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a1 - 1).getNumbPicURL(), 140, 140));
        lbl3.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a2 - 1).getNumbPicURL(), 140, 140));
        lbl2.setIcon(Help.imgicn("src/Database/Pictures/QuestionMark.png", 140, 140));
        lbl4.setIcon(Help.imgicn("src/Database/Pictures/" + Help.Plus.getMakPicURL(), 140, 140));
        InpAns();
        if (Help.Sound) {
            VoiceThread t1 = new VoiceThread(500, a1 + ".mp3", 1000);
            VoiceThread t2 = new VoiceThread(1600, m + ".mp3", 1000);
            VoiceThread t3 = new VoiceThread(2700, "What.mp3", 1000);
            VoiceThread t4 = new VoiceThread(3800, "Equal.mp3", 1000);
            VoiceThread t5 = new VoiceThread(4900, a2 + ".mp3", 1000);
            t1.start();
            t2.start();
            t3.start();
            t4.start();
            t5.start();
        }
    }

    private void Sub1() {
        m = "Minus";
        a1 = rand.nextInt(19) + 1;
        a2 = rand.nextInt(19) + 1;
        while (a1 - a2 <= 0) {
            a1 = rand.nextInt(19) + 1;
            a2 = rand.nextInt(19) + 1;
        }
        Integer p = rand.nextInt(4) + 1;
        Ans = a1 - a2;
        if (p == 1) {
            b1 = Ans;
            b2 = NumberRandomCheck(b1, 0, 0, 0);
            b3 = NumberRandomCheck(b1, b2, 0, 0);
            b4 = NumberRandomCheck(b1, b3, b2, 0);
        }
        if (p == 2) {
            b2 = Ans;
            b3 = NumberRandomCheck(b2, 0, 0, 0);
            b4 = NumberRandomCheck(b2, b3, 0, 0);
            b1 = NumberRandomCheck(b2, b3, b4, 0);
        }
        if (p == 3) {
            b3 = Ans;
            b4 = NumberRandomCheck(b3, 0, 0, 0);
            b1 = NumberRandomCheck(b3, b4, 0, 0);
            b2 = NumberRandomCheck(b3, b4, b1, 0);
        }

        if (p == 4) {
            b4 = Ans;
            b1 = NumberRandomCheck(b4, 0, 0, 0);
            b2 = NumberRandomCheck(b4, b1, 0, 0);
            b3 = NumberRandomCheck(b4, b1, b2, 0);
        }
        lbl1.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a1 - 1).getNumbPicURL(), 140, 140));
        lbl2.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a2 - 1).getNumbPicURL(), 140, 140));
        lbl3.setIcon(Help.imgicn("src/Database/Pictures/QuestionMark.png", 140, 140));
        lbl4.setIcon(Help.imgicn("src/Database/Pictures/" + Help.Minus.getMakPicURL(), 140, 140));
        InpAns();
        if (Help.Sound) {
            VoiceThread t1 = new VoiceThread(500, a1 + ".mp3", 1000);
            VoiceThread t2 = new VoiceThread(1600, m + ".mp3", 1000);
            VoiceThread t3 = new VoiceThread(2700, a2 + ".mp3", 1000);
            VoiceThread t4 = new VoiceThread(3800, "Equal.mp3", 1000);
            VoiceThread t5 = new VoiceThread(4900, "what.mp3", 1000);
            t1.start();
            t2.start();
            t3.start();
            t4.start();
            t5.start();
        }
    }

    private void Sub2() {
        m = "Minus";
        a1 = rand.nextInt(9) + 1;
        a2 = rand.nextInt(9) + 1;
        Ans = a1 - a2;
        while ((Ans) < 1) {
            a1 = rand.nextInt(9) + 1;
            a2 = rand.nextInt(9) + 1;
            Ans = a1 - a2;
        }
        Integer p = rand.nextInt(4) + 1;
        if (p == 1) {
            b1 = Ans;
            b2 = NumberRandomCheck(b1, 0, 0, 0);
            b3 = NumberRandomCheck(b1, b2, 0, 0);
            b4 = NumberRandomCheck(b1, b3, b2, 0);
        }
        if (p == 2) {
            b2 = Ans;
            b3 = NumberRandomCheck(b2, 0, 0, 0);
            b4 = NumberRandomCheck(b2, b3, 0, 0);
            b1 = NumberRandomCheck(b2, b3, b4, 0);
        }
        if (p == 3) {
            b3 = Ans;
            b4 = NumberRandomCheck(b3, 0, 0, 0);
            b1 = NumberRandomCheck(b3, b4, 0, 0);
            b2 = NumberRandomCheck(b3, b4, b1, 0);
        }

        if (p == 4) {
            b4 = Ans;
            b1 = NumberRandomCheck(b4, 0, 0, 0);
            b2 = NumberRandomCheck(b4, b1, 0, 0);
            b3 = NumberRandomCheck(b4, b1, b2, 0);
        }
        lbl1.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a1 - 1).getNumbPicURL(), 140, 140));
        lbl3.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(a2 - 1).getNumbPicURL(), 140, 140));
        lbl2.setIcon(Help.imgicn("src/Database/Pictures/QuestionMark.png", 140, 140));
        lbl4.setIcon(Help.imgicn("src/Database/Pictures/" + Help.Minus.getMakPicURL(), 140, 140));
        InpAns();
        if (Help.Sound) {
            VoiceThread t1 = new VoiceThread(500, a1 + ".mp3", 1000);
            VoiceThread t2 = new VoiceThread(1600, m + ".mp3", 1000);
            VoiceThread t3 = new VoiceThread(2700, "What.mp3", 1000);
            VoiceThread t4 = new VoiceThread(3800, "Equal.mp3", 1000);
            VoiceThread t5 = new VoiceThread(4900, a2 + ".mp3", 1000);
            t1.start();
            t2.start();
            t3.start();
            t4.start();
            t5.start();
        }
    }

    private Integer NumberRandomCheck(int a, int b, int c, int d) {
        Integer check = rand.nextInt(9) + 1;
        while (check == b || check == c || check == d || check == a) {
            check = rand.nextInt(a);
        }
        return check;
    }

    private void InpAns() {
        lbl5.setIcon(Help.imgicn("src/Database/Pictures/Equal.png", 200, 200));
        btn1.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(b1 - 1).getNumbPicURL(), 150, 150));
        btn2.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(b2 - 1).getNumbPicURL(), 150, 150));
        btn3.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(b3 - 1).getNumbPicURL(), 150, 150));
        btn4.setIcon(Help.imgicn("src/Database/Pictures/" + Help.t1.get(b4 - 1).getNumbPicURL(), 150, 150));
    }

    private void CorrectAns(Integer b3) {
        jLabel1.setIcon(Help.imgicn("src/Database/Background/GreenBackground.jpg", 1138, 659));
        if (a == 0 || a == 2) {
            if (Help.Sound) {
                VoiceThread t1 = new VoiceThread(1500, a1 + ".mp3", 1000);
                VoiceThread t2 = new VoiceThread(2600, m + ".mp3", 1000);
                VoiceThread t3 = new VoiceThread(3700, a2 + ".mp3", 1000);
                VoiceThread t4 = new VoiceThread(4800, "Equal.mp3", 1000);
                VoiceThread t5 = new VoiceThread(5900, b3 + ".mp3", 1000);
                correct.start();
                t1.start();
                t2.start();
                t3.start();
                t4.start();
                t5.start();
            }
            lbl3.setIcon(Help.imgicn("src/Database/Pictures/" + b3 + ".png", 140, 140));
        } else {
            if (Help.Sound) {
                VoiceThread t1 = new VoiceThread(1500, a1 + ".mp3", 1000);
                VoiceThread t2 = new VoiceThread(2600, m + ".mp3", 1000);
                VoiceThread t3 = new VoiceThread(3700, b3 + ".mp3", 1000);
                VoiceThread t4 = new VoiceThread(4800, "Equal.mp3", 1000);
                VoiceThread t5 = new VoiceThread(5900, a2 + ".mp3", 1000);
                correct.start();
                t1.start();
                t2.start();
                t3.start();
                t4.start();
                t5.start();
            }
            lbl2.setIcon(Help.imgicn("src/Database/Pictures/" + b3 + ".png", 140, 140));
        }
        btn1.setVisible(false);
        btn2.setVisible(false);
        btn3.setVisible(false);
        btn4.setVisible(false);
        jButton2.setVisible(true);
        jButton3.setVisible(true);
    }
}
